steps:
# =========================
# 1. Install Dependencies
# =========================
- name: 'python:3.11'
  id: 'Install Dependencies'
  entrypoint: 'bash'
  args:
    - -c
    - |
      pip install --upgrade pip
      pip install -r app1/requirements.txt

# =========================
# 2. Run Tests
# =========================
- name: 'python:3.11'
  id: 'Run Tests'
  entrypoint: 'bash'
  args:
    - -c
    - |
      echo "Running tests (placeholder)"

# =========================
# CodeQL Analysis
# =========================
- name: 'ghcr.io/github/codeql-cli/codeql:latest'
  id: 'CodeQL Scan'
  entrypoint: 'bash'
  args:
    - -c
    - |
      mkdir -p /workspace/codeql-db
      codeql database create /workspace/codeql-db \
        --language=python \
        --source-root=app1
      codeql database analyze /workspace/codeql-db \
        --format=sarif-latest \
        --output=/workspace/codeql-report.sarif


# =========================
# 4. Store Build Files into GCS
# =========================
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'Upload Build Files to GCS'
  args:
    - cp
    - app1/*
    - gs://pythonapp1/

# =========================
# 5. Docker Build
# =========================
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Docker Image'
  args: [
    'build',
    '-t', 'us-central1-docker.pkg.dev/gcp-zero-to-hero-467513/app1/pythonapp1:${SHORT_SHA}',
    './app1'
  ]

# =========================
# 6. Trivy Image Scan
# =========================
- name: 'aquasec/trivy'
  id: 'Trivy Scan'
  entrypoint: 'sh'
  args:
    - -c
    - |
      trivy image --exit-code 0 --severity HIGH,CRITICAL us-central1-docker.pkg.dev/gcp-zero-to-hero-467513/app1/pythonapp1:${SHORT_SHA}

# =========================
# 7. Push Docker Image
# =========================
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Docker Image'
  args: [
    'push',
    'us-central1-docker.pkg.dev/gcp-zero-to-hero-467513/app1/pythonapp1:${SHORT_SHA}'
  ]

# =========================
# 8. DAST Scan on Running Container
# =========================
- name: 'owasp/zap2docker-stable'
  id: 'OWASP ZAP DAST Scan'
  entrypoint: 'sh'
  args:
    - -c
    - |
      docker run -d -p 8080:8080 us-central1-docker.pkg.dev/gcp-zero-to-hero-467513/app1/pythonapp1:${SHORT_SHA}
      zap-cli quick-scan --self-contained --start-options "-config api.disablekey=true" http://localhost:8080

# =========================
# 9. Update Kubernetes Manifests
# =========================
- name: 'google/cloud-sdk:latest'
  id: 'Update Kubernetes Manifest'
  entrypoint: 'bash'
  args:
    - -c
    - |
      sed -i "s|image: .*|image: us-central1-docker.pkg.dev/gcp-zero-to-hero-467513/app1/pythonapp1:${SHORT_SHA}|" kubernetes/app1.yaml
      cat kubernetes/app1.yaml
      # Optionally push back to repo (if GitOps flow is required)

# =========================
# Options
# =========================
options:
  logging: CLOUD_LOGGING_ONLY

images:
- 'us-central1-docker.pkg.dev/gcp-zero-to-hero-467513/app1/pythonapp1:${SHORT_SHA}'
