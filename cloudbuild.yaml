steps:
# 1. Install Python dependencies
- name: 'python:3.11'
  entrypoint: 'bash'
  args:
    - -c
    - |
      pip install --upgrade pip
      pip install -r app1/requirements.txt

# 2. Run tests (placeholder, replace with pytest if ready)
- name: 'python:3.11'
  entrypoint: 'bash'
  args:
    - -c
    - |
      echo "Running tests..."
      # pytest app1/tests

# 3. Store artifacts in GCS (optional, if you want .whl or build logs)
- name: 'gcr.io/cloud-builders/gsutil'
  args:
    - cp
    - -r
    - app1/*
    - gs://pythonapp1/

# 4. Docker Build
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'build',
      '-t',
      'us-central1-docker.pkg.dev/$PROJECT_ID/app1/pythonapp1:${SHORT_SHA}',
      './app1'
    ]

# 5. Trivy Image Scan
- name: 'aquasec/trivy:latest'
  entrypoint: 'sh'
  args:
    - -c
    - |
      trivy image --exit-code 0 --severity HIGH,CRITICAL us-central1-docker.pkg.dev/$PROJECT_ID/app1/pythonapp1:${SHORT_SHA}

# 6. Push Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push',
      'us-central1-docker.pkg.dev/$PROJECT_ID/app1/pythonapp1:${SHORT_SHA}'
    ]

# 7. Update Kubernetes Manifest in GitHub
- name: 'gcr.io/cloud-builders/git'
  entrypoint: bash
  args:
    - -c
    - |
      sed -i "s|image: .*|image: us-central1-docker.pkg.dev/$PROJECT_ID/app1/pythonapp1:${SHORT_SHA}|" kubernetes/deployment.yaml
      git config --global user.email "cloudbuild@$PROJECT_ID.iam.gserviceaccount.com"
      git config --global user.name "Cloud Build"
      git add kubernetes/deployment.yaml
      git commit -m "Update image to ${SHORT_SHA}"
      git push https://github.com/$REPO_NAME.git HEAD:main

# =====================
# Options
# =====================
options:
  logging: CLOUD_LOGGING_ONLY
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

images:
  - "us-central1-docker.pkg.dev/$PROJECT_ID/app1/pythonapp1:${SHORT_SHA}"
